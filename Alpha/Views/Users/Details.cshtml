@{
    bool auth = User.Identity.IsAuthenticated;
    bool isManager = auth && User.IsInRole("Manager");
}
@model Alpha.Models.User

@{
    ViewData["Title"] = "Details";
}

<h2>User "@Model.Name"</h2>

<div class="row">
    <div class="col-xs-12 header">
        <a asp-action="Index">&larr;&nbsp;Back to users</a>
        @if (isManager)
        {
            <span>&nbsp;|&nbsp;</span>
            <a asp-action="Edit" asp-route-id="@Model.Id">&nbsp;&#10003;&nbsp;Edit</a>
            <span>&nbsp;|&nbsp;</span>
            <a asp-action="Remove" asp-route-id="@Model.Id">&nbsp;x&nbsp;Remove</a>
        }
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <h2>@Html.DisplayFor(model => model.Name)</h2>
        @if (isManager)
        {
            <span class="icon">&#9733;</span>
        }
        else
        {
            <span class="icon">&#9829;</span>
        }
        @Html.DisplayFor(model => model.Role.Name)
        <br /><br />
    </div>
</div>

<script type="text/javascript">
    function GetReservations() {
        $.ajax({
            type: "GET",
            url: "../Reservations/@Model.Id",
            dataType: "text",
            success: function (data) {
                if (data != null) {
                    $("#res").html(data);
                } else {
                    $("#res").text("Something went wrong");
                }
            },
            failure: function (response) {
                $("#res").text("Failure");
            },
            error: function (response) {
                $("#res").text("Error");
            }
        });
    }

    setInterval(GetReservations, 5000);

    GetReservations();
</script>

<div id="res">
    @{await Html.RenderPartialAsync("_Reservations", Model.Reservations);}
</div>
